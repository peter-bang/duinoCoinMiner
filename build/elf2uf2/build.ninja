## This file contains all the build statements describing the
# compilation DAG.

# =============================================================================
# Write statements declared in CMakeLists.txt:
# 
# Which is the root file.
# =============================================================================

# =============================================================================
# Project: elf2uf2
# Configurations: 
# =============================================================================

#############################################
# Minimal version of Ninja required by this file

ninja_required_version = 1.5

# =============================================================================
# Include auxiliary files.


#############################################
# Include rules file.

include CMakeFiles/rules.ninja

# =============================================================================

#############################################
# Logical path to working directory; prefix for absolute paths.

cmake_ninja_workdir = /Volumes/외장하드/workspace/rpi-pico/duinoCoinMiner/build/elf2uf2/
# =============================================================================
# Object build statements for EXECUTABLE target elf2uf2


#############################################
# Order-only phony target for elf2uf2

build cmake_object_order_depends_target_elf2uf2: phony || CMakeFiles/elf2uf2.dir

build CMakeFiles/elf2uf2.dir/main.cpp.o: CXX_COMPILER__elf2uf2_ /Users/peterbang/pico/pico-sdk/tools/elf2uf2/main.cpp || cmake_object_order_depends_target_elf2uf2
  DEP_FILE = CMakeFiles/elf2uf2.dir/main.cpp.o.d
  FLAGS = -arch x86_64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk -std=gnu++14
  INCLUDES = -I/Users/peterbang/pico/pico-sdk/src/common/boot_uf2/include
  OBJECT_DIR = CMakeFiles/elf2uf2.dir
  OBJECT_FILE_DIR = CMakeFiles/elf2uf2.dir


# =============================================================================
# Link build statements for EXECUTABLE target elf2uf2


#############################################
# Link the executable elf2uf2

build elf2uf2: CXX_EXECUTABLE_LINKER__elf2uf2_ CMakeFiles/elf2uf2.dir/main.cpp.o
  FLAGS = -arch x86_64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk
  OBJECT_DIR = CMakeFiles/elf2uf2.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = elf2uf2
  TARGET_PDB = elf2uf2.dbg


#############################################
# Utility command for edit_cache

build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Volumes/외장하드/workspace/rpi-pico/duinoCoinMiner/build/elf2uf2 && /opt/homebrew/Cellar/cmake/3.24.0/bin/ccmake -S/Users/peterbang/pico/pico-sdk/tools/elf2uf2 -B/Volumes/외장하드/workspace/rpi-pico/duinoCoinMiner/build/elf2uf2
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build edit_cache: phony CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Volumes/외장하드/workspace/rpi-pico/duinoCoinMiner/build/elf2uf2 && /opt/homebrew/Cellar/cmake/3.24.0/bin/cmake --regenerate-during-build -S/Users/peterbang/pico/pico-sdk/tools/elf2uf2 -B/Volumes/외장하드/workspace/rpi-pico/duinoCoinMiner/build/elf2uf2
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build rebuild_cache: phony CMakeFiles/rebuild_cache.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/peterbang/pico/pico-sdk/tools/elf2uf2/CMakeLists.txt
# =============================================================================


#############################################
# Utility command for edit_cache

build boot_uf2_headers/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Volumes/외장하드/workspace/rpi-pico/duinoCoinMiner/build/elf2uf2/boot_uf2_headers && /opt/homebrew/Cellar/cmake/3.24.0/bin/ccmake -S/Users/peterbang/pico/pico-sdk/tools/elf2uf2 -B/Volumes/외장하드/workspace/rpi-pico/duinoCoinMiner/build/elf2uf2
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build boot_uf2_headers/edit_cache: phony boot_uf2_headers/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build boot_uf2_headers/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Volumes/외장하드/workspace/rpi-pico/duinoCoinMiner/build/elf2uf2/boot_uf2_headers && /opt/homebrew/Cellar/cmake/3.24.0/bin/cmake --regenerate-during-build -S/Users/peterbang/pico/pico-sdk/tools/elf2uf2 -B/Volumes/외장하드/workspace/rpi-pico/duinoCoinMiner/build/elf2uf2
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build boot_uf2_headers/rebuild_cache: phony boot_uf2_headers/CMakeFiles/rebuild_cache.util

# =============================================================================
# Target aliases.

# =============================================================================
# Folder targets.

# =============================================================================

#############################################
# Folder: /Volumes/외장하드/workspace/rpi-pico/duinoCoinMiner/build/elf2uf2

build all: phony elf2uf2 boot_uf2_headers/all

# =============================================================================

#############################################
# Folder: /Volumes/외장하드/workspace/rpi-pico/duinoCoinMiner/build/elf2uf2/boot_uf2_headers

build boot_uf2_headers/all: phony

# =============================================================================
# Built-in targets


#############################################
# Re-run CMake if any of its inputs changed.

build build.ninja: RERUN_CMAKE | /Users/peterbang/pico/pico-sdk/src/common/boot_uf2/CMakeLists.txt /Users/peterbang/pico/pico-sdk/tools/elf2uf2/CMakeLists.txt /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/CMakeCInformation.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/CMakeCXXInformation.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/CMakeCommonLanguageInclude.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/CMakeGenericSystem.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/CMakeInitializeConfigs.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/CMakeLanguageInformation.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/CMakeSystemSpecificInformation.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Compiler/AppleClang-C.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Compiler/AppleClang-CXX.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Compiler/Clang.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Compiler/GNU.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Platform/Apple-AppleClang-C.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Platform/Apple-AppleClang-CXX.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Platform/Apple-Clang-C.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Platform/Apple-Clang-CXX.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Platform/Apple-Clang.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Platform/Darwin-Initialize.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Platform/Darwin.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Platform/UnixPaths.cmake CMakeCache.txt CMakeFiles/3.24.0/CMakeCCompiler.cmake CMakeFiles/3.24.0/CMakeCXXCompiler.cmake CMakeFiles/3.24.0/CMakeSystem.cmake
  pool = console


#############################################
# A missing CMake input file is not an error.

build /Users/peterbang/pico/pico-sdk/src/common/boot_uf2/CMakeLists.txt /Users/peterbang/pico/pico-sdk/tools/elf2uf2/CMakeLists.txt /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/CMakeCInformation.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/CMakeCXXInformation.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/CMakeCommonLanguageInclude.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/CMakeGenericSystem.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/CMakeInitializeConfigs.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/CMakeLanguageInformation.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/CMakeSystemSpecificInformation.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Compiler/AppleClang-C.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Compiler/AppleClang-CXX.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Compiler/Clang.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Compiler/GNU.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Platform/Apple-AppleClang-C.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Platform/Apple-AppleClang-CXX.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Platform/Apple-Clang-C.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Platform/Apple-Clang-CXX.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Platform/Apple-Clang.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Platform/Darwin-Initialize.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Platform/Darwin.cmake /opt/homebrew/Cellar/cmake/3.24.0/share/cmake/Modules/Platform/UnixPaths.cmake CMakeCache.txt CMakeFiles/3.24.0/CMakeCCompiler.cmake CMakeFiles/3.24.0/CMakeCXXCompiler.cmake CMakeFiles/3.24.0/CMakeSystem.cmake: phony


#############################################
# Clean all the built files.

build clean: CLEAN


#############################################
# Print all primary targets available.

build help: HELP


#############################################
# Make the all target the default.

default all
